openapi: 3.0.3
info:
    title: Mai.Today Server
    description: Mai.Today Server
    version: 1.0.0
servers:
    - url: https://dev.api.mai.today/
    - url: http://localhost:8080
paths:
    /{channel}/addUserToChatroom:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Add User to Chatroom by ID'
            operationId: chatroom#receiveAddUserToChatroom
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUserToChatroomResult'
                            example:
                                command:
                                    type: addUserToChatroom
                                data:
                                    chatroomId: "123456"
                                    message: User added successfully
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/createBase:
        get:
            tags:
                - Base
            summary: '[WebSocket] 創造一個新的基地'
            operationId: Base#receiveCreateBase
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBaseResult'
                            example:
                                command:
                                    type: createBase
                                data:
                                    id: 669071b8a650a662b82285ca
                                    info:
                                        base_id: EbZvovBKbFogJeRem5oj2S
                                        color: '#FF5733'
                                        deleted_at: null
                                        id: EbZvovBKbFogJeRem5oj2S
                                        logo: http://example.com/logo.png
                                        name: 基地 A
                                    nav_state:
                                        base_id: 669071b8a650a662b82285ca
                                        deleted_at: "2024-01-01T11:53:54Z"
                                        id: 669071b8a650a662b82285ca
                                        index: 0
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/createBoard:
        get:
            tags:
                - Board
            summary: '[WebSocket] 創造一個新的版'
            operationId: Board#receiveCreateBoard
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBoardResult'
                            example:
                                command:
                                    type: createBoard
                                data:
                                    id: 669071b8a650a662b82285ca
                                    info:
                                        color: '#FF5733'
                                        id: 669071b8a650a662b82285ca
                                        logo: http://example.com/logo.png
                                        name: 版 A
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/createChatroom:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Create a new chatroom'
            operationId: chatroom#receiveCreateChatroom
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateChatroomResult'
                            example:
                                command:
                                    type: createChatroom
                                data:
                                    avatar: https://example.com/avatar.png
                                    baseId: 669c07250b20ee76727169b0
                                    boardId: uuid
                                    chatroomId: "123456"
                                    createdAt: "2024-01-01T11:53:54Z"
                                    title: Chat Room 1
                                    type: private
                                    updatedAt: "2024-01-01T11:53:54Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/createFolder:
        get:
            tags:
                - folder
            summary: '[WebSocket] Create a new folder'
            operationId: folder#receiveCreateFolder
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFolderResult'
                            example:
                                command:
                                    type: createFolder
                                data:
                                    baseId: base123
                                    createdAt: "2024-01-01T00:00:00Z"
                                    data:
                                        color: red
                                        name: My Folder
                                    folderId: "123456"
                                    parentId: parent123
                                    position: 1
                                    type: type123
                                    updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/deleteBase:
        get:
            tags:
                - Base
            summary: '[WebSocket] 删除指定的基地'
            operationId: Base#receiveDeleteBase
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBaseResult'
                            example:
                                command:
                                    type: deleteBase
                                data:
                                    base_id: 669071b8a650a662b82285ca
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/deleteBoard:
        get:
            tags:
                - Board
            summary: '[WebSocket] 删除指定的版'
            operationId: Board#receiveDeleteBoard
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBoardResult'
                            example:
                                command:
                                    type: deleteBoard
                                data:
                                    boardID: 669071b8a650a662b82285ca
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/deleteFolder:
        get:
            tags:
                - folder
            summary: '[WebSocket] Delete a folder by ID'
            operationId: folder#receiveDeleteFolder
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFolderResult'
                            example:
                                command:
                                    type: deleteFolder
                                data:
                                    baseId: base123
                                    createdAt: "2024-01-01T00:00:00Z"
                                    data:
                                        color: red
                                        name: My Folder
                                    folderId: "123456"
                                    parentId: parent123
                                    position: 1
                                    type: type123
                                    updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/getChatroomMembers:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Get chatroom members'
            operationId: chatroom#receiveGetChatroomMembers
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetChatroomMembersResult'
                            example:
                                command:
                                    type: getChatroomMembers
                                data:
                                    members:
                                        - avatar: https://example.com/avatar.jpg
                                          nickname: JohnDoe
                                          userId: user123
                                        - avatar: https://example.com/avatar.jpg
                                          nickname: JohnDoe
                                          userId: user123
                                        - avatar: https://example.com/avatar.jpg
                                          nickname: JohnDoe
                                          userId: user123
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/getMessages:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Retrieve messages for a chatroom'
            operationId: chatroom#receiveGetMessages
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMessagesResult'
                            example:
                                command:
                                    type: getMessages
                                data:
                                    messages:
                                        - command:
                                            type: message
                                          data:
                                            avatar: https://example.com/avatar.png
                                            chatroomId: chatroom456
                                            createdAt: "2024-01-01T11:53:54Z"
                                            data: Hello, world!
                                            id: msg123
                                            nickname: text
                                            senderId: user789
                                            type: text
                                            updatedAt: "2024-01-01T11:53:54Z"
                                          timestamp: 1719188007000000000
                                        - command:
                                            type: message
                                          data:
                                            avatar: https://example.com/avatar.png
                                            chatroomId: chatroom456
                                            createdAt: "2024-01-01T11:53:54Z"
                                            data: Hello, world!
                                            id: msg123
                                            nickname: text
                                            senderId: user789
                                            type: text
                                            updatedAt: "2024-01-01T11:53:54Z"
                                          timestamp: 1719188007000000000
                                        - command:
                                            type: message
                                          data:
                                            avatar: https://example.com/avatar.png
                                            chatroomId: chatroom456
                                            createdAt: "2024-01-01T11:53:54Z"
                                            data: Hello, world!
                                            id: msg123
                                            nickname: text
                                            senderId: user789
                                            type: text
                                            updatedAt: "2024-01-01T11:53:54Z"
                                          timestamp: 1719188007000000000
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/listBoard:
        get:
            tags:
                - Board
            summary: '[WebSocket] 取得指定父層的子版'
            operationId: Board#receiveListBoard
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetListByParentIDResult'
                            example:
                                command:
                                    type: getListByParentID
                                data:
                                    - color: '#FF5733'
                                      id: 669071b8a650a662b82285ca
                                      logo: http://example.com/logo.png
                                      name: 版 A
                                    - color: '#FF5733'
                                      id: 669071b8a650a662b82285ca
                                      logo: http://example.com/logo.png
                                      name: 版 A
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/listChatrooms:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] List all chatrooms'
            operationId: chatroom#receiveListChatrooms
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListChatroomsResult'
                            example:
                                data:
                                    - avatar: https://example.com/avatar.png
                                      baseId: 669c07250b20ee76727169b0
                                      boardId: uuid
                                      chatroomId: "123456"
                                      createdAt: "2024-01-01T11:53:54Z"
                                      title: Chat Room 1
                                      type: private
                                      updatedAt: "2024-01-01T11:53:54Z"
                                    - avatar: https://example.com/avatar.png
                                      baseId: 669c07250b20ee76727169b0
                                      boardId: uuid
                                      chatroomId: "123456"
                                      createdAt: "2024-01-01T11:53:54Z"
                                      title: Chat Room 1
                                      type: private
                                      updatedAt: "2024-01-01T11:53:54Z"
                                    - avatar: https://example.com/avatar.png
                                      baseId: 669c07250b20ee76727169b0
                                      boardId: uuid
                                      chatroomId: "123456"
                                      createdAt: "2024-01-01T11:53:54Z"
                                      title: Chat Room 1
                                      type: private
                                      updatedAt: "2024-01-01T11:53:54Z"
            security:
                - JWT_header_Authorization: []
    /{channel}/listFolders:
        get:
            tags:
                - folder
            summary: '[WebSocket] List all folders'
            operationId: folder#receiveListFolders
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFoldersResult'
                            example:
                                command:
                                    type: listFolders
                                data:
                                    - baseId: base123
                                      createdAt: "2024-01-01T00:00:00Z"
                                      data:
                                        color: red
                                        name: My Folder
                                      folderId: "123456"
                                      parentId: parent123
                                      position: 1
                                      type: type123
                                      updatedAt: "2024-01-02T00:00:00Z"
                                    - baseId: base123
                                      createdAt: "2024-01-01T00:00:00Z"
                                      data:
                                        color: red
                                        name: My Folder
                                      folderId: "123456"
                                      parentId: parent123
                                      position: 1
                                      type: type123
                                      updatedAt: "2024-01-02T00:00:00Z"
                                    - baseId: base123
                                      createdAt: "2024-01-01T00:00:00Z"
                                      data:
                                        color: red
                                        name: My Folder
                                      folderId: "123456"
                                      parentId: parent123
                                      position: 1
                                      type: type123
                                      updatedAt: "2024-01-02T00:00:00Z"
                                    - baseId: base123
                                      createdAt: "2024-01-01T00:00:00Z"
                                      data:
                                        color: red
                                        name: My Folder
                                      folderId: "123456"
                                      parentId: parent123
                                      position: 1
                                      type: type123
                                      updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/removeUserFromChatroom:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Remove User from Chatroom by ID'
            operationId: chatroom#receiveRemoveUserFromChatroom
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveUserFromChatroomResult'
                            example:
                                command:
                                    type: removeUserFromChatroom
                                data:
                                    chatroomId: "123456"
                                    message: User removed successfully
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/reorderBaseNavStates:
        get:
            tags:
                - Base
            summary: '[WebSocket] 變更基地的順序'
            operationId: Base#receiveReorderBaseNavStates
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReorderBaseNavStateResult'
                            example:
                                command:
                                    type: reorderBaseNavState
                                data:
                                    - base_id: EbZvovBKbFogJeRem5oj2S
                                      deleted_at: null
                                      id: EbZvovBKbFogJeRem5oj7a
                                      index: 0
                                    - base_id: EbZvovBKbFogJeRem5oj3S
                                      deleted_at: null
                                      id: EbZvovBKbFogJeRem5oj7b
                                      index: 1
                                    - base_id: EbZvovBKbFogJeRem5oj4S
                                      deleted_at: null
                                      id: EbZvovBKbFogJeRem5oj7c
                                      index: 2
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/reorderBoardNavStates:
        get:
            tags:
                - Board
            summary: '[WebSocket] 變更版的順序'
            operationId: Board#receiveReorderBoardNavStates
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBoardResult'
                            example:
                                command:
                                    type: reorderBoardNavState
                                data:
                                    boardID: 669071b8a650a662b82285ca
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/sendMessage:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Send a message to a chatroom'
            operationId: chatroom#receiveSendMessage
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MessageResult'
                            example:
                                command:
                                    type: sendMessage
                                data:
                                    avatar: https://example.com/avatar.png
                                    chatroomId: chatroom456
                                    createdAt: "2024-01-01T11:53:54Z"
                                    data: Hello, world!
                                    id: msg123
                                    nickname: text
                                    senderId: user789
                                    type: text
                                    updatedAt: "2024-01-01T11:53:54Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/sync:
        get:
            tags:
                - Sync
            summary: '[WebSocket] 請求同步'
            operationId: Sync#receiveSync
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SyncResult'
                            example:
                                command:
                                    type: sync
                                data:
                                    base_infos:
                                        - base_id: EbZvovBKbFogJeRem5oj2S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj2S
                                          logo: http://example.com/logo.png
                                          name: 基地 A
                                        - base_id: EbZvovBKbFogJeRem5oj3S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj3S
                                          logo: http://example.com/logo.png
                                          name: 基地 B
                                        - base_id: EbZvovBKbFogJeRem5oj4S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj4S
                                          logo: http://example.com/logo.png
                                          name: 基地 C
                                    base_nav_states:
                                        - base_id: EbZvovBKbFogJeRem5oj2S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7a
                                          index: 0
                                        - base_id: EbZvovBKbFogJeRem5oj3S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7b
                                          index: 1
                                        - base_id: EbZvovBKbFogJeRem5oj4S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7c
                                          index: 2
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/updateBaseInfo:
        get:
            tags:
                - Base
            summary: '[WebSocket] 更新基地資訊'
            operationId: Base#receiveUpdateBaseInfo
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBaseInfoResult'
                            example:
                                command:
                                    type: updateBaseInfo
                                data:
                                    base_id: EbZvovBKbFogJeRem5oj2S
                                    color: '#FF5733'
                                    deleted_at: null
                                    id: EbZvovBKbFogJeRem5oj2S
                                    logo: http://example.com/logo.png
                                    name: 基地 A
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/updateBoardInfo:
        get:
            tags:
                - Board
            summary: '[WebSocket] 更新版資訊'
            operationId: Board#receiveUpdateBoardInfo
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBoardInfoResult'
                            example:
                                command:
                                    type: updateBoardInfo
                                data:
                                    color: '#FF5733'
                                    id: 669071b8a650a662b82285ca
                                    logo: http://example.com/logo.png
                                    name: 版 A
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/updateChatroom:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Update chatroom information by ID'
            operationId: chatroom#receiveUpdateChatroom
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateChatroomResult'
                            example:
                                command:
                                    type: updateChatroom
                                data:
                                    avatar: https://example.com/avatar.png
                                    baseId: 669c07250b20ee76727169b0
                                    boardId: uuid
                                    chatroomId: "123456"
                                    createdAt: "2024-01-01T11:53:54Z"
                                    title: Chat Room 1
                                    type: private
                                    updatedAt: "2024-01-01T11:53:54Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/updateFolder:
        get:
            tags:
                - folder
            summary: '[WebSocket] Update folder information by ID'
            operationId: folder#receiveUpdateFolder
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFolderResult'
                            example:
                                command:
                                    type: updateFolder
                                data:
                                    baseId: base123
                                    createdAt: "2024-01-01T00:00:00Z"
                                    data:
                                        color: red
                                        name: My Folder
                                    folderId: "123456"
                                    parentId: parent123
                                    position: 1
                                    type: type123
                                    updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/userMutedChatRoom:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Mute User in Chatroom by ID'
            operationId: chatroom#receiveUserMutedChatRoom
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserMutedChatRoomResult'
                            example:
                                command:
                                    type: userMutedChatRoom
                                data:
                                    chatroomId: "123456"
                                    mute: true
                                    userId: user789
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /{channel}/userPinnedChatRoom:
        get:
            tags:
                - chatroom
            summary: '[WebSocket] Pin User in Chatroom by ID'
            operationId: chatroom#receiveUserPinnedChatRoom
            parameters:
                - name: channel
                  in: path
                  description: 使用者識別碼
                  required: true
                  schema:
                    type: string
                    description: 使用者識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "101":
                    description: 此 API 僅用於 WebSocket 協議
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPinnedChatRoomResult'
                            example:
                                command:
                                    type: userPinnedChatRoom
                                data:
                                    chatroomId: "123456"
                                    pin: true
                                    userId: user789
                                timestamp: 1719188007000000000
            security:
                - JWT_header_Authorization: []
    /base:
        post:
            tags:
                - Base
            summary: 創造一個新的基地
            operationId: Base#CreateBase
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBaseRequestBody'
                        example:
                            color: '#FF5733'
                            index: 0
                            logo: http://example.com/logo.png
                            name: 基地 A
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBaseResult'
                            example:
                                command:
                                    type: createBase
                                data:
                                    id: 669071b8a650a662b82285ca
                                    info:
                                        base_id: EbZvovBKbFogJeRem5oj2S
                                        color: '#FF5733'
                                        deleted_at: null
                                        id: EbZvovBKbFogJeRem5oj2S
                                        logo: http://example.com/logo.png
                                        name: 基地 A
                                    nav_state:
                                        base_id: 669071b8a650a662b82285ca
                                        deleted_at: "2024-01-01T11:53:54Z"
                                        id: 669071b8a650a662b82285ca
                                        index: 0
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /base/{id}:
        delete:
            tags:
                - Base
            summary: 删除指定的基地
            operationId: Base#DeleteBase
            parameters:
                - name: id
                  in: path
                  description: 識別碼
                  required: true
                  schema:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBaseResult'
                            example:
                                command:
                                    type: deleteBase
                                data:
                                    base_id: 669071b8a650a662b82285ca
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "403":
                    description: 'permission denied: 沒有權限'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: 缺乏存取所請求資源的必要權限
                "404":
                    description: 'not found: 資源不存在'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: 資源不存在
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /base/{id}/info:
        put:
            tags:
                - Base
            summary: 更新基地資訊
            operationId: Base#UpdateBaseInfo
            parameters:
                - name: id
                  in: path
                  description: 識別碼
                  required: true
                  schema:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBaseInfoRequestBody'
                        example:
                            color: '#FF5733'
                            logo: http://example.com/logo.png
                            name: 基地 A
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBaseInfoResult'
                            example:
                                command:
                                    type: updateBaseInfo
                                data:
                                    base_id: EbZvovBKbFogJeRem5oj2S
                                    color: '#FF5733'
                                    deleted_at: null
                                    id: EbZvovBKbFogJeRem5oj2S
                                    logo: http://example.com/logo.png
                                    name: 基地 A
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "403":
                    description: 'permission denied: 沒有權限'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: 缺乏存取所請求資源的必要權限
                "404":
                    description: 'not found: 資源不存在'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: 資源不存在
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /base/list:
        get:
            tags:
                - Base
            summary: 取得基地列表
            operationId: Base#GetBaseList
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetBaseListResult'
                            example:
                                command:
                                    type: getBaseList
                                data:
                                    base_infos:
                                        - base_id: EbZvovBKbFogJeRem5oj2S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj2S
                                          logo: http://example.com/logo.png
                                          name: 基地 A
                                        - base_id: EbZvovBKbFogJeRem5oj3S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj3S
                                          logo: http://example.com/logo.png
                                          name: 基地 B
                                        - base_id: EbZvovBKbFogJeRem5oj4S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj4S
                                          logo: http://example.com/logo.png
                                          name: 基地 C
                                    base_nav_states:
                                        - base_id: EbZvovBKbFogJeRem5oj2S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7a
                                          index: 0
                                        - base_id: EbZvovBKbFogJeRem5oj3S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7b
                                          index: 1
                                        - base_id: EbZvovBKbFogJeRem5oj4S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7c
                                          index: 2
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /base/nav-state/reorder:
        put:
            tags:
                - Base
            summary: 變更基地的順序
            operationId: Base#ReorderBaseNavStates
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReorderBaseNavStatesRequestBody'
                        example:
                            id: 669071b8a650a662b82285ca
                            new_index: 0
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReorderBaseNavStateResult'
                            example:
                                command:
                                    type: reorderBaseNavState
                                data:
                                    - base_id: EbZvovBKbFogJeRem5oj2S
                                      deleted_at: null
                                      id: EbZvovBKbFogJeRem5oj7a
                                      index: 0
                                    - base_id: EbZvovBKbFogJeRem5oj3S
                                      deleted_at: null
                                      id: EbZvovBKbFogJeRem5oj7b
                                      index: 1
                                    - base_id: EbZvovBKbFogJeRem5oj4S
                                      deleted_at: null
                                      id: EbZvovBKbFogJeRem5oj7c
                                      index: 2
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /board:
        post:
            tags:
                - Board
            summary: 創造一個新的版
            operationId: Board#CreateBoard
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateBoardRequestBody'
                        example:
                            baseID: 669071b8a650a662b82285ca
                            color: '#FF5733'
                            logo: http://example.com/logo.png
                            name: 版 A
                            parentID: 669071b8a650a662b82285ca
                            position: 0
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateBoardResult'
                            example:
                                command:
                                    type: createBoard
                                data:
                                    id: 669071b8a650a662b82285ca
                                    info:
                                        color: '#FF5733'
                                        id: 669071b8a650a662b82285ca
                                        logo: http://example.com/logo.png
                                        name: 版 A
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /board/{id}:
        delete:
            tags:
                - Board
            summary: 删除指定的版
            operationId: Board#DeleteBoard
            parameters:
                - name: id
                  in: path
                  description: 識別碼
                  required: true
                  schema:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBoardResult'
                            example:
                                command:
                                    type: deleteBoard
                                data:
                                    boardID: 669071b8a650a662b82285ca
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /board/{id}/nav-state:
        put:
            tags:
                - Board
            summary: 變更版的順序
            operationId: Board#ReorderBoardNavStates
            parameters:
                - name: id
                  in: path
                  description: 識別碼
                  required: true
                  schema:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ReorderBoardNavStatesRequestBody'
                        example:
                            parentID: 669071b8a650a662b82285ca
                            position: 0
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteBoardResult'
                            example:
                                command:
                                    type: reorderBoardNavState
                                data:
                                    boardID: 669071b8a650a662b82285ca
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /board/info/{id}:
        put:
            tags:
                - Board
            summary: 更新版資訊
            operationId: Board#UpdateBoardInfo
            parameters:
                - name: id
                  in: path
                  description: 識別碼
                  required: true
                  schema:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBoardInfoRequestBody'
                        example:
                            color: '#FF5733'
                            logo: http://example.com/logo.png
                            name: 版 A
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBoardInfoResult'
                            example:
                                command:
                                    type: updateBoardInfo
                                data:
                                    color: '#FF5733'
                                    id: 669071b8a650a662b82285ca
                                    logo: http://example.com/logo.png
                                    name: 版 A
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom:
        post:
            tags:
                - chatroom
            summary: Create a new chatroom
            operationId: chatroom#CreateChatroom
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateChatroomRequestBody'
                        example:
                            avatar: https://example.com/avatar.png
                            baseId: base123
                            boardId: board123
                            title: Chat Room 1
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateChatroomResult'
                            example:
                                command:
                                    type: createChatroom
                                data:
                                    avatar: https://example.com/avatar.png
                                    baseId: 669c07250b20ee76727169b0
                                    boardId: uuid
                                    chatroomId: "123456"
                                    createdAt: "2024-01-01T11:53:54Z"
                                    title: Chat Room 1
                                    type: private
                                    updatedAt: "2024-01-01T11:53:54Z"
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/{chatroomId}:
        delete:
            tags:
                - chatroom
            summary: Remove User from Chatroom by ID
            operationId: chatroom#RemoveUserFromChatroom
            parameters:
                - name: chatroomId
                  in: path
                  description: Chatroom identifier
                  required: true
                  schema:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                  example: "123456"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RemoveUserFromChatroomRequestBody'
                        example:
                            userId: user789
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RemoveUserFromChatroomResult'
                            example:
                                command:
                                    type: removeUserFromChatroom
                                data:
                                    chatroomId: "123456"
                                    message: User removed successfully
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
        put:
            tags:
                - chatroom
            summary: Update chatroom information by ID
            operationId: chatroom#UpdateChatroom
            parameters:
                - name: chatroomId
                  in: path
                  description: Chatroom identifier
                  required: true
                  schema:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                  example: "123456"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateChatroomRequestBody'
                        example:
                            avatar: https://example.com/avatar.png
                            title: Chat Room 1
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateChatroomResult'
                            example:
                                command:
                                    type: updateChatroom
                                data:
                                    avatar: https://example.com/avatar.png
                                    baseId: 669c07250b20ee76727169b0
                                    boardId: uuid
                                    chatroomId: "123456"
                                    createdAt: "2024-01-01T11:53:54Z"
                                    title: Chat Room 1
                                    type: private
                                    updatedAt: "2024-01-01T11:53:54Z"
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/{chatroomId}/add-user:
        post:
            tags:
                - chatroom
            summary: Add User to Chatroom by ID
            operationId: chatroom#AddUserToChatroom
            parameters:
                - name: chatroomId
                  in: path
                  description: Chatroom identifier
                  required: true
                  schema:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                  example: "123456"
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddUserToChatroomResult'
                            example:
                                command:
                                    type: addUserToChatroom
                                data:
                                    chatroomId: "123456"
                                    message: User added successfully
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/{chatroomId}/members:
        get:
            tags:
                - chatroom
            summary: Get chatroom members
            operationId: chatroom#GetChatroomMembers
            parameters:
                - name: chatroomId
                  in: path
                  description: Identifier of the chatroom
                  required: true
                  schema:
                    type: string
                    description: Identifier of the chatroom
                    example: chatroom456
                  example: chatroom456
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetChatroomMembersResult'
                            example:
                                command:
                                    type: getChatroomMembers
                                data:
                                    members:
                                        - avatar: https://example.com/avatar.jpg
                                          nickname: JohnDoe
                                          userId: user123
                                        - avatar: https://example.com/avatar.jpg
                                          nickname: JohnDoe
                                          userId: user123
                                        - avatar: https://example.com/avatar.jpg
                                          nickname: JohnDoe
                                          userId: user123
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/{chatroomId}/messages:
        get:
            tags:
                - chatroom
            summary: Retrieve messages for a chatroom
            operationId: chatroom#GetMessages
            parameters:
                - name: page
                  in: query
                  description: Page number
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: integer
                    description: Page number
                    example: 1
                    format: int64
                  example: 1
                - name: pageSize
                  in: query
                  description: Page size for pagination
                  allowEmptyValue: true
                  required: true
                  schema:
                    type: integer
                    description: Page size for pagination
                    example: 10
                    format: int64
                  example: 10
                - name: chatroomId
                  in: path
                  description: Identifier of the chatroom
                  required: true
                  schema:
                    type: string
                    description: Identifier of the chatroom
                    example: chatroom456
                  example: chatroom456
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMessagesResult'
                            example:
                                command:
                                    type: getMessages
                                data:
                                    messages:
                                        - command:
                                            type: message
                                          data:
                                            avatar: https://example.com/avatar.png
                                            chatroomId: chatroom456
                                            createdAt: "2024-01-01T11:53:54Z"
                                            data: Hello, world!
                                            id: msg123
                                            nickname: text
                                            senderId: user789
                                            type: text
                                            updatedAt: "2024-01-01T11:53:54Z"
                                          timestamp: 1719188007000000000
                                        - command:
                                            type: message
                                          data:
                                            avatar: https://example.com/avatar.png
                                            chatroomId: chatroom456
                                            createdAt: "2024-01-01T11:53:54Z"
                                            data: Hello, world!
                                            id: msg123
                                            nickname: text
                                            senderId: user789
                                            type: text
                                            updatedAt: "2024-01-01T11:53:54Z"
                                          timestamp: 1719188007000000000
                                        - command:
                                            type: message
                                          data:
                                            avatar: https://example.com/avatar.png
                                            chatroomId: chatroom456
                                            createdAt: "2024-01-01T11:53:54Z"
                                            data: Hello, world!
                                            id: msg123
                                            nickname: text
                                            senderId: user789
                                            type: text
                                            updatedAt: "2024-01-01T11:53:54Z"
                                          timestamp: 1719188007000000000
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
        post:
            tags:
                - chatroom
            summary: Send a message to a chatroom
            operationId: chatroom#SendMessage
            parameters:
                - name: chatroomId
                  in: path
                  description: Identifier of the chatroom
                  required: true
                  schema:
                    type: string
                    description: Identifier of the chatroom
                    example: chatroom456
                  example: chatroom456
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SendMessageRequestBody'
                        example:
                            data: Hello, world!
                            type: text
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MessageResult'
                            example:
                                command:
                                    type: sendMessage
                                data:
                                    avatar: https://example.com/avatar.png
                                    chatroomId: chatroom456
                                    createdAt: "2024-01-01T11:53:54Z"
                                    data: Hello, world!
                                    id: msg123
                                    nickname: text
                                    senderId: user789
                                    type: text
                                    updatedAt: "2024-01-01T11:53:54Z"
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/{chatroomId}/user-muted-chatroom:
        put:
            tags:
                - chatroom
            summary: Mute User in Chatroom by ID
            operationId: chatroom#UserMutedChatRoom
            parameters:
                - name: chatroomId
                  in: path
                  description: Chatroom identifier
                  required: true
                  schema:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                  example: "123456"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserMutedChatRoomRequestBody'
                        example:
                            mute: true
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserMutedChatRoomResult'
                            example:
                                command:
                                    type: userMutedChatRoom
                                data:
                                    chatroomId: "123456"
                                    mute: true
                                    userId: user789
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/{chatroomId}/user-pinned-chatroom:
        put:
            tags:
                - chatroom
            summary: Pin User in Chatroom by ID
            operationId: chatroom#UserPinnedChatRoom
            parameters:
                - name: chatroomId
                  in: path
                  description: Chatroom identifier
                  required: true
                  schema:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                  example: "123456"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UserPinnedChatRoomRequestBody'
                        example:
                            pin: true
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPinnedChatRoomResult'
                            example:
                                command:
                                    type: userPinnedChatRoom
                                data:
                                    chatroomId: "123456"
                                    pin: true
                                    userId: user789
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /chatroom/room:
        get:
            tags:
                - chatroom
            summary: List all chatrooms
            operationId: chatroom#ListChatrooms
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListChatroomsResult'
                            example:
                                data:
                                    - avatar: https://example.com/avatar.png
                                      baseId: 669c07250b20ee76727169b0
                                      boardId: uuid
                                      chatroomId: "123456"
                                      createdAt: "2024-01-01T11:53:54Z"
                                      title: Chat Room 1
                                      type: private
                                      updatedAt: "2024-01-01T11:53:54Z"
                                    - avatar: https://example.com/avatar.png
                                      baseId: 669c07250b20ee76727169b0
                                      boardId: uuid
                                      chatroomId: "123456"
                                      createdAt: "2024-01-01T11:53:54Z"
                                      title: Chat Room 1
                                      type: private
                                      updatedAt: "2024-01-01T11:53:54Z"
                                    - avatar: https://example.com/avatar.png
                                      baseId: 669c07250b20ee76727169b0
                                      boardId: uuid
                                      chatroomId: "123456"
                                      createdAt: "2024-01-01T11:53:54Z"
                                      title: Chat Room 1
                                      type: private
                                      updatedAt: "2024-01-01T11:53:54Z"
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /folders:
        get:
            tags:
                - folder
            summary: List all folders
            operationId: folder#ListFolders
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListFoldersResult'
                            example:
                                command:
                                    type: listFolders
                                data:
                                    - baseId: base123
                                      createdAt: "2024-01-01T00:00:00Z"
                                      data:
                                        color: red
                                        name: My Folder
                                      folderId: "123456"
                                      parentId: parent123
                                      position: 1
                                      type: type123
                                      updatedAt: "2024-01-02T00:00:00Z"
                                    - baseId: base123
                                      createdAt: "2024-01-01T00:00:00Z"
                                      data:
                                        color: red
                                        name: My Folder
                                      folderId: "123456"
                                      parentId: parent123
                                      position: 1
                                      type: type123
                                      updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
        post:
            tags:
                - folder
            summary: Create a new folder
            operationId: folder#CreateFolder
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFolderRequestBody'
                        example:
                            baseId: base123
                            data:
                                color: red
                                name: My Folder
                            parentId: parent123
                            position: 1
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFolderResult'
                            example:
                                command:
                                    type: createFolder
                                data:
                                    baseId: base123
                                    createdAt: "2024-01-01T00:00:00Z"
                                    data:
                                        color: red
                                        name: My Folder
                                    folderId: "123456"
                                    parentId: parent123
                                    position: 1
                                    type: type123
                                    updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /folders/{folderId}:
        delete:
            tags:
                - folder
            summary: Delete a folder by ID
            operationId: folder#DeleteFolder
            parameters:
                - name: folderId
                  in: path
                  description: Folder identifier
                  required: true
                  schema:
                    type: string
                    description: Folder identifier
                    example: "123456"
                  example: "123456"
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFolderResult'
                            example:
                                command:
                                    type: deleteFolder
                                data:
                                    baseId: base123
                                    createdAt: "2024-01-01T00:00:00Z"
                                    data:
                                        color: red
                                        name: My Folder
                                    folderId: "123456"
                                    parentId: parent123
                                    position: 1
                                    type: type123
                                    updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
        put:
            tags:
                - folder
            summary: Update folder information by ID
            operationId: folder#UpdateFolder
            parameters:
                - name: folderId
                  in: path
                  description: Folder identifier
                  required: true
                  schema:
                    type: string
                    description: Folder identifier
                    example: "123456"
                  example: "123456"
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateFolderRequestBody'
                        example:
                            baseId: base123
                            data:
                                color: red
                                name: My Folder
                            parentId: parent123
                            position: 1
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateFolderResult'
                            example:
                                command:
                                    type: updateFolder
                                data:
                                    baseId: base123
                                    createdAt: "2024-01-01T00:00:00Z"
                                    data:
                                        color: red
                                        name: My Folder
                                    folderId: "123456"
                                    parentId: parent123
                                    position: 1
                                    type: type123
                                    updatedAt: "2024-01-02T00:00:00Z"
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /listBoard/{parentID}:
        get:
            tags:
                - Board
            summary: 取得指定父層的子版
            operationId: Board#ListBoard
            parameters:
                - name: parentID
                  in: path
                  description: 上一級基地/資料夾的識別碼
                  required: true
                  schema:
                    type: string
                    description: 上一級基地/資料夾的識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                  example: 669071b8a650a662b82285ca
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetListByParentIDResult'
                            example:
                                command:
                                    type: getListByParentID
                                data:
                                    - color: '#FF5733'
                                      id: 669071b8a650a662b82285ca
                                      logo: http://example.com/logo.png
                                      name: 版 A
                                    - color: '#FF5733'
                                      id: 669071b8a650a662b82285ca
                                      logo: http://example.com/logo.png
                                      name: 版 A
                                    - color: '#FF5733'
                                      id: 669071b8a650a662b82285ca
                                      logo: http://example.com/logo.png
                                      name: 版 A
                                timestamp: 1719188007000000000
                "400":
                    description: 參數錯誤
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
    /signin:
        post:
            tags:
                - Authentication
            summary: 登入
            operationId: Authentication#SignIn
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SignInRequestBody'
                        example:
                            firebaseIdToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.Et9HFtf9R3GEMA0IICOfFMVXY7kkTX1wr4qCyhIf58U
            responses:
                "200":
                    description: 登入完成
                "400":
                    description: 'token_error: token 錯誤'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
    /sync:
        post:
            tags:
                - Sync
            summary: 請求同步
            operationId: Sync#sync
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SyncRequestBody'
                        example:
                            lastTimestamp: 1719188007000000000
            responses:
                "200":
                    description: 操作成功
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SyncResult'
                            example:
                                command:
                                    type: sync
                                data:
                                    base_infos:
                                        - base_id: EbZvovBKbFogJeRem5oj2S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj2S
                                          logo: http://example.com/logo.png
                                          name: 基地 A
                                        - base_id: EbZvovBKbFogJeRem5oj3S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj3S
                                          logo: http://example.com/logo.png
                                          name: 基地 B
                                        - base_id: EbZvovBKbFogJeRem5oj4S
                                          color: '#FF5733'
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj4S
                                          logo: http://example.com/logo.png
                                          name: 基地 C
                                    base_nav_states:
                                        - base_id: EbZvovBKbFogJeRem5oj2S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7a
                                          index: 0
                                        - base_id: EbZvovBKbFogJeRem5oj3S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7b
                                          index: 1
                                        - base_id: EbZvovBKbFogJeRem5oj4S
                                          deleted_at: null
                                          id: EbZvovBKbFogJeRem5oj7c
                                          index: 2
                                timestamp: 1719188007000000000
                "401":
                    description: 'invalid token: token 無效'
                    content:
                        application/vnd.goa.error:
                            schema:
                                $ref: '#/components/schemas/Error'
                            example:
                                message: token 過期
                "500":
                    description: 伺服器發生錯誤
            security:
                - JWT_header_Authorization: []
components:
    schemas:
        AddUserResultData:
            type: object
            properties:
                chatroomId:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                message:
                    type: string
                    description: Message indicating the result of the operation
                    example: User added successfully
            description: Result of adding a user to a chatroom
            example:
                chatroomId: "123456"
                message: User added successfully
            required:
                - chatroomId
                - message
        AddUserToChatroomResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/AddUserResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: addUserToChatroom
                data:
                    chatroomId: "123456"
                    message: User added successfully
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        BaseInfo:
            type: object
            properties:
                base_id:
                    type: string
                    description: 基地識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                color:
                    type: string
                    description: 主題颜色
                    example: '#FF5733'
                    minLength: 1
                    maxLength: 16
                deleted_at:
                    type: string
                    description: 刪除時間
                    example: "2024-01-01T11:53:54Z"
                    format: date-time
                id:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                logo:
                    type: string
                    description: 標識圖片的 URL
                    example: http://example.com/logo.png
                    minLength: 1
                    maxLength: 1024
                name:
                    type: string
                    description: 名稱
                    example: 基地 A
                    minLength: 1
                    maxLength: 128
            description: 基地資訊
            example:
                base_id: EbZvovBKbFogJeRem5oj2S
                color: '#FF5733'
                deleted_at: null
                id: EbZvovBKbFogJeRem5oj2S
                logo: http://example.com/logo.png
                name: 基地 A
            required:
                - id
                - base_id
                - color
                - name
        BaseNavState:
            type: object
            properties:
                base_id:
                    type: string
                    description: 基地識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                deleted_at:
                    type: string
                    description: 刪除時間
                    example: "2024-01-01T11:53:54Z"
                    format: date-time
                id:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                index:
                    type: integer
                    description: 順序
                    default: 1
                    example: 0
                    format: int64
                    minimum: 1
            description: 基地導覽列狀態
            example:
                base_id: 669071b8a650a662b82285ca
                deleted_at: "2024-01-01T11:53:54Z"
                id: 669071b8a650a662b82285ca
                index: 0
            required:
                - id
                - base_id
                - index
        BoardInfo:
            type: object
            properties:
                color:
                    type: string
                    description: 版颜色
                    example: '#FF5733'
                    minLength: 1
                    maxLength: 16
                id:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                logo:
                    type: string
                    description: 版Logo的 URL
                    example: http://example.com/logo.png
                    minLength: 1
                    maxLength: 1024
                name:
                    type: string
                    description: 名稱
                    example: 版 A
                    minLength: 1
                    maxLength: 128
            description: 版資訊
            example:
                color: '#FF5733'
                id: 669071b8a650a662b82285ca
                logo: http://example.com/logo.png
                name: 版 A
            required:
                - id
                - color
                - logo
                - name
        ChatroomMemberResult:
            type: object
            properties:
                avatar:
                    type: string
                    description: Avatar URL of the user
                    example: https://example.com/avatar.jpg
                nickname:
                    type: string
                    description: Nickname of the user
                    example: JohnDoe
                userId:
                    type: string
                    description: Identifier of the user
                    example: user123
            example:
                avatar: https://example.com/avatar.jpg
                nickname: JohnDoe
                userId: user123
            required:
                - userId
                - avatar
                - nickname
        Command:
            type: object
            properties:
                type:
                    type: string
                    description: 類型
                    example: deleteBase
                    enum:
                        - sync
                        - createBase
                        - deleteBase
                        - reorderBaseNavState
                        - updateBaseInfo
            description: 指令
            example:
                type: createBase
            required:
                - type
        CreateBaseRequestBody:
            type: object
            properties:
                color:
                    type: string
                    description: 主題颜色
                    example: '#FF5733'
                    minLength: 1
                    maxLength: 16
                index:
                    type: integer
                    description: 順序
                    default: 1
                    example: 0
                    format: int64
                    minimum: 1
                logo:
                    type: string
                    description: 標識圖片的 URL
                    example: http://example.com/logo.png
                    minLength: 1
                    maxLength: 1024
                name:
                    type: string
                    description: 名稱
                    example: 基地 A
                    minLength: 1
                    maxLength: 128
            example:
                color: '#FF5733'
                index: 0
                logo: http://example.com/logo.png
                name: 基地 A
            required:
                - color
                - name
        CreateBaseResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/CreateBaseResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: createBase
                data:
                    id: 669071b8a650a662b82285ca
                    info:
                        base_id: EbZvovBKbFogJeRem5oj2S
                        color: '#FF5733'
                        deleted_at: null
                        id: EbZvovBKbFogJeRem5oj2S
                        logo: http://example.com/logo.png
                        name: 基地 A
                    nav_state:
                        base_id: 669071b8a650a662b82285ca
                        deleted_at: "2024-01-01T11:53:54Z"
                        id: 669071b8a650a662b82285ca
                        index: 0
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        CreateBaseResultData:
            type: object
            properties:
                id:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                info:
                    $ref: '#/components/schemas/BaseInfo'
                nav_state:
                    $ref: '#/components/schemas/BaseNavState'
            example:
                id: 669071b8a650a662b82285ca
                info:
                    base_id: EbZvovBKbFogJeRem5oj2S
                    color: '#FF5733'
                    deleted_at: null
                    id: EbZvovBKbFogJeRem5oj2S
                    logo: http://example.com/logo.png
                    name: 基地 A
                nav_state:
                    base_id: 669071b8a650a662b82285ca
                    deleted_at: "2024-01-01T11:53:54Z"
                    id: 669071b8a650a662b82285ca
                    index: 0
            required:
                - id
                - info
                - nav_state
        CreateBoardRequestBody:
            type: object
            properties:
                baseID:
                    type: string
                    description: 基地別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                color:
                    type: string
                    description: 版颜色
                    example: '#FF5733'
                    minLength: 1
                    maxLength: 16
                logo:
                    type: string
                    description: 版Logo的 URL
                    example: http://example.com/logo.png
                    minLength: 1
                    maxLength: 1024
                name:
                    type: string
                    description: 名稱
                    example: 版 A
                    minLength: 1
                    maxLength: 128
                parentID:
                    type: string
                    description: 上一級基地/資料夾的識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                position:
                    type: integer
                    description: 順序
                    default: 0
                    example: 0
                    format: int64
            example:
                baseID: 669071b8a650a662b82285ca
                color: '#FF5733'
                logo: http://example.com/logo.png
                name: 版 A
                parentID: 669071b8a650a662b82285ca
                position: 0
            required:
                - baseID
                - parentID
                - name
                - color
                - logo
                - position
        CreateBoardResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/CreateBoardResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: createBoard
                data:
                    id: 669071b8a650a662b82285ca
                    info:
                        color: '#FF5733'
                        id: 669071b8a650a662b82285ca
                        logo: http://example.com/logo.png
                        name: 版 A
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        CreateBoardResultData:
            type: object
            properties:
                id:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                info:
                    $ref: '#/components/schemas/BoardInfo'
            example:
                id: 669071b8a650a662b82285ca
                info:
                    color: '#FF5733'
                    id: 669071b8a650a662b82285ca
                    logo: http://example.com/logo.png
                    name: 版 A
            required:
                - id
                - info
        CreateChatroomRequestBody:
            type: object
            properties:
                avatar:
                    type: string
                    description: Chatroom avatar
                    example: https://example.com/avatar.png
                baseId:
                    type: string
                    description: Base identifier
                    example: base123
                boardId:
                    type: string
                    description: Board identifier
                    example: board123
                title:
                    type: string
                    description: Title of the chatroom
                    example: Chat Room 1
            description: Chatroom information.
            example:
                avatar: https://example.com/avatar.png
                baseId: base123
                boardId: board123
                title: Chat Room 1
            required:
                - baseId
                - title
        CreateChatroomResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/CreateChatroomResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: createChatroom
                data:
                    avatar: https://example.com/avatar.png
                    baseId: 669c07250b20ee76727169b0
                    boardId: uuid
                    chatroomId: "123456"
                    createdAt: "2024-01-01T11:53:54Z"
                    title: Chat Room 1
                    type: private
                    updatedAt: "2024-01-01T11:53:54Z"
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        CreateChatroomResultData:
            type: object
            properties:
                avatar:
                    type: string
                    description: Chatroom avatar
                    example: https://example.com/avatar.png
                baseId:
                    type: string
                    description: Base identifier
                    example: 669c07250b20ee76727169b0
                boardId:
                    type: string
                    description: Board identifier
                    example: uuid
                chatroomId:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                createdAt:
                    type: string
                    description: Time of creation
                    example: "2024-01-01T11:53:54Z"
                    format: date-time
                title:
                    type: string
                    description: Title of the chatroom
                    example: Chat Room 1
                type:
                    type: string
                    description: Type of the chatroom
                    example: private
                updatedAt:
                    type: string
                    description: Time of update
                    example: "2024-01-01T11:53:54Z"
                    format: date-time
            description: Create Chatroom Result Data
            example:
                avatar: https://example.com/avatar.png
                baseId: 669c07250b20ee76727169b0
                boardId: uuid
                chatroomId: "123456"
                createdAt: "2024-01-01T11:53:54Z"
                title: Chat Room 1
                type: private
                updatedAt: "2024-01-01T11:53:54Z"
            required:
                - chatroomId
                - baseId
                - title
                - createdAt
                - updatedAt
                - avatar
                - boardId
                - type
        CreateFolderRequestBody:
            type: object
            properties:
                baseId:
                    type: string
                    description: Base identifier
                    example: base123
                data:
                    $ref: '#/components/schemas/FolderData'
                parentId:
                    type: string
                    description: Parent identifier
                    example: parent123
                position:
                    type: number
                    description: Position of the folder
                    example: 1
                    format: double
            example:
                baseId: base123
                data:
                    color: red
                    name: My Folder
                parentId: parent123
                position: 1
            required:
                - baseId
                - parentId
                - data
                - position
        CreateFolderResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/Createfolderresultdata'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: createFolder
                data:
                    baseId: base123
                    createdAt: "2024-01-01T00:00:00Z"
                    data:
                        color: red
                        name: My Folder
                    folderId: "123456"
                    parentId: parent123
                    position: 1
                    type: type123
                    updatedAt: "2024-01-02T00:00:00Z"
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        Createfolderresultdata:
            type: object
            properties:
                baseId:
                    type: string
                    description: Base identifier
                    example: base123
                createdAt:
                    type: string
                    description: Time of creation
                    example: "2024-01-01T00:00:00Z"
                data:
                    $ref: '#/components/schemas/FolderData'
                folderId:
                    type: string
                    description: Folder identifier
                    example: "123456"
                parentId:
                    type: string
                    description: Parent identifier
                    example: parent123
                position:
                    type: number
                    description: Position of the folder
                    example: 1
                    format: double
                type:
                    type: string
                    description: Type of the folder
                    example: type123
                updatedAt:
                    type: string
                    description: Time of update
                    example: "2024-01-02T00:00:00Z"
            description: Create Folder Result Data
            example:
                baseId: base123
                createdAt: "2024-01-01T00:00:00Z"
                data:
                    color: red
                    name: My Folder
                folderId: "123456"
                parentId: parent123
                position: 1
                type: type123
                updatedAt: "2024-01-02T00:00:00Z"
            required:
                - folderId
                - baseId
                - parentId
                - createdAt
                - updatedAt
                - data
                - type
                - position
        DeleteBaseResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/DeleteBaseResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: deleteBase
                data:
                    base_id: 669071b8a650a662b82285ca
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        DeleteBaseResultData:
            type: object
            properties:
                base_id:
                    type: string
                    description: 基地識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
            example:
                base_id: 669071b8a650a662b82285ca
            required:
                - base_id
        DeleteBoardResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/DeleteBoardResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: deleteBoard
                data:
                    boardID: 669071b8a650a662b82285ca
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        DeleteBoardResultData:
            type: object
            properties:
                boardID:
                    type: string
                    description: 版識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
            example:
                boardID: 669071b8a650a662b82285ca
            required:
                - boardID
        Error:
            type: object
            properties:
                fault:
                    type: boolean
                    description: Is the error a server-side fault?
                    example: true
                id:
                    type: string
                    description: ID is a unique identifier for this particular occurrence of the problem.
                    example: 123abc
                message:
                    type: string
                    description: Message is a human-readable explanation specific to this occurrence of the problem.
                    example: parameter 'p' must be an integer
                name:
                    type: string
                    description: Name is the name of this class of errors.
                    example: bad_request
                temporary:
                    type: boolean
                    description: Is the error temporary?
                    example: true
                timeout:
                    type: boolean
                    description: Is the error a timeout?
                    example: false
            example:
                fault: true
                id: 123abc
                message: parameter 'p' must be an integer
                name: bad_request
                temporary: true
                timeout: true
            required:
                - name
                - id
                - message
                - temporary
                - timeout
                - fault
        FolderData:
            type: object
            properties:
                color:
                    type: string
                    description: Folder color
                    example: red
                name:
                    type: string
                    description: Folder name
                    example: My Folder
            description: Custom folder data.
            example:
                color: red
                name: My Folder
            required:
                - color
                - name
        GetBaseListResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/GetBaseListResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: getBaseList
                data:
                    base_infos:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj2S
                          logo: http://example.com/logo.png
                          name: 基地 A
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj3S
                          logo: http://example.com/logo.png
                          name: 基地 B
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj4S
                          logo: http://example.com/logo.png
                          name: 基地 C
                    base_nav_states:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7a
                          index: 0
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7b
                          index: 1
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7c
                          index: 2
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        GetBaseListResultData:
            type: object
            properties:
                base_infos:
                    type: array
                    items:
                        $ref: '#/components/schemas/BaseInfo'
                    example:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj2S
                          logo: http://example.com/logo.png
                          name: 基地 A
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj3S
                          logo: http://example.com/logo.png
                          name: 基地 B
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj4S
                          logo: http://example.com/logo.png
                          name: 基地 C
                base_nav_states:
                    type: array
                    items:
                        $ref: '#/components/schemas/BaseNavState'
                    example:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7a
                          index: 0
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7b
                          index: 1
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7c
                          index: 2
            example:
                base_infos:
                    - base_id: EbZvovBKbFogJeRem5oj2S
                      color: '#FF5733'
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj2S
                      logo: http://example.com/logo.png
                      name: 基地 A
                    - base_id: EbZvovBKbFogJeRem5oj3S
                      color: '#FF5733'
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj3S
                      logo: http://example.com/logo.png
                      name: 基地 B
                    - base_id: EbZvovBKbFogJeRem5oj4S
                      color: '#FF5733'
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj4S
                      logo: http://example.com/logo.png
                      name: 基地 C
                base_nav_states:
                    - base_id: EbZvovBKbFogJeRem5oj2S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7a
                      index: 0
                    - base_id: EbZvovBKbFogJeRem5oj3S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7b
                      index: 1
                    - base_id: EbZvovBKbFogJeRem5oj4S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7c
                      index: 2
            required:
                - base_infos
                - base_nav_states
        GetChatroomMembersResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/GetChatroomMembersResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: getChatroomMembers
                data:
                    members:
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        GetChatroomMembersResultData:
            type: object
            properties:
                members:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChatroomMemberResult'
                    description: List of chatroom members
                    example:
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
                        - avatar: https://example.com/avatar.jpg
                          nickname: JohnDoe
                          userId: user123
            description: Result of getting chatroom members
            example:
                members:
                    - avatar: https://example.com/avatar.jpg
                      nickname: JohnDoe
                      userId: user123
                    - avatar: https://example.com/avatar.jpg
                      nickname: JohnDoe
                      userId: user123
                    - avatar: https://example.com/avatar.jpg
                      nickname: JohnDoe
                      userId: user123
                    - avatar: https://example.com/avatar.jpg
                      nickname: JohnDoe
                      userId: user123
            required:
                - members
        GetListByParentIDResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/BoardInfo'
                    description: 資料
                    example:
                        - color: '#FF5733'
                          id: 669071b8a650a662b82285ca
                          logo: http://example.com/logo.png
                          name: 版 A
                        - color: '#FF5733'
                          id: 669071b8a650a662b82285ca
                          logo: http://example.com/logo.png
                          name: 版 A
                        - color: '#FF5733'
                          id: 669071b8a650a662b82285ca
                          logo: http://example.com/logo.png
                          name: 版 A
                        - color: '#FF5733'
                          id: 669071b8a650a662b82285ca
                          logo: http://example.com/logo.png
                          name: 版 A
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: getListByParentID
                data:
                    - color: '#FF5733'
                      id: 669071b8a650a662b82285ca
                      logo: http://example.com/logo.png
                      name: 版 A
                    - color: '#FF5733'
                      id: 669071b8a650a662b82285ca
                      logo: http://example.com/logo.png
                      name: 版 A
                    - color: '#FF5733'
                      id: 669071b8a650a662b82285ca
                      logo: http://example.com/logo.png
                      name: 版 A
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        GetMessagesResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/Messages'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: getMessages
                data:
                    messages:
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        ListChatroomsResult:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/CreateChatroomResultData'
                    description: List of chatrooms
                    example:
                        - avatar: https://example.com/avatar.png
                          baseId: 669c07250b20ee76727169b0
                          boardId: uuid
                          chatroomId: "123456"
                          createdAt: "2024-01-01T11:53:54Z"
                          title: Chat Room 1
                          type: private
                          updatedAt: "2024-01-01T11:53:54Z"
                        - avatar: https://example.com/avatar.png
                          baseId: 669c07250b20ee76727169b0
                          boardId: uuid
                          chatroomId: "123456"
                          createdAt: "2024-01-01T11:53:54Z"
                          title: Chat Room 1
                          type: private
                          updatedAt: "2024-01-01T11:53:54Z"
            example:
                data:
                    - avatar: https://example.com/avatar.png
                      baseId: 669c07250b20ee76727169b0
                      boardId: uuid
                      chatroomId: "123456"
                      createdAt: "2024-01-01T11:53:54Z"
                      title: Chat Room 1
                      type: private
                      updatedAt: "2024-01-01T11:53:54Z"
                    - avatar: https://example.com/avatar.png
                      baseId: 669c07250b20ee76727169b0
                      boardId: uuid
                      chatroomId: "123456"
                      createdAt: "2024-01-01T11:53:54Z"
                      title: Chat Room 1
                      type: private
                      updatedAt: "2024-01-01T11:53:54Z"
            required:
                - data
        ListFoldersResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/Createfolderresultdata'
                    description: 資料
                    example:
                        - baseId: base123
                          createdAt: "2024-01-01T00:00:00Z"
                          data:
                            color: red
                            name: My Folder
                          folderId: "123456"
                          parentId: parent123
                          position: 1
                          type: type123
                          updatedAt: "2024-01-02T00:00:00Z"
                        - baseId: base123
                          createdAt: "2024-01-01T00:00:00Z"
                          data:
                            color: red
                            name: My Folder
                          folderId: "123456"
                          parentId: parent123
                          position: 1
                          type: type123
                          updatedAt: "2024-01-02T00:00:00Z"
                        - baseId: base123
                          createdAt: "2024-01-01T00:00:00Z"
                          data:
                            color: red
                            name: My Folder
                          folderId: "123456"
                          parentId: parent123
                          position: 1
                          type: type123
                          updatedAt: "2024-01-02T00:00:00Z"
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: listFolders
                data:
                    - baseId: base123
                      createdAt: "2024-01-01T00:00:00Z"
                      data:
                        color: red
                        name: My Folder
                      folderId: "123456"
                      parentId: parent123
                      position: 1
                      type: type123
                      updatedAt: "2024-01-02T00:00:00Z"
                    - baseId: base123
                      createdAt: "2024-01-01T00:00:00Z"
                      data:
                        color: red
                        name: My Folder
                      folderId: "123456"
                      parentId: parent123
                      position: 1
                      type: type123
                      updatedAt: "2024-01-02T00:00:00Z"
                    - baseId: base123
                      createdAt: "2024-01-01T00:00:00Z"
                      data:
                        color: red
                        name: My Folder
                      folderId: "123456"
                      parentId: parent123
                      position: 1
                      type: type123
                      updatedAt: "2024-01-02T00:00:00Z"
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        Message:
            type: object
            properties:
                avatar:
                    type: string
                    description: avatar
                    example: https://example.com/avatar.png
                chatroomId:
                    type: string
                    description: Identifier of the chatroom
                    example: chatroom456
                createdAt:
                    type: string
                    description: Time of creation
                    example: "2024-01-01T11:53:54Z"
                    format: date-time
                data:
                    type: string
                    description: Content of the message
                    example: Hello, world!
                id:
                    type: string
                    description: Unique identifier for the message
                    example: msg123
                nickname:
                    type: string
                    description: nickname
                    example: text
                senderId:
                    type: string
                    description: Identifier of the sender
                    example: user789
                type:
                    type: string
                    description: Type of the message
                    example: text
                updatedAt:
                    type: string
                    description: Time of update
                    example: "2024-01-01T11:53:54Z"
                    format: date-time
            description: Message data
            example:
                avatar: https://example.com/avatar.png
                chatroomId: chatroom456
                createdAt: "2024-01-01T11:53:54Z"
                data: Hello, world!
                id: msg123
                nickname: text
                senderId: user789
                type: text
                updatedAt: "2024-01-01T11:53:54Z"
            required:
                - id
                - chatroomId
                - senderId
                - type
                - data
                - createdAt
                - updatedAt
                - avatar
                - nickname
        MessageResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/Message'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            description: WebSocket 的通用資料負載
            example:
                command:
                    type: message
                data:
                    avatar: https://example.com/avatar.png
                    chatroomId: chatroom456
                    createdAt: "2024-01-01T11:53:54Z"
                    data: Hello, world!
                    id: msg123
                    nickname: text
                    senderId: user789
                    type: text
                    updatedAt: "2024-01-01T11:53:54Z"
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        Messages:
            type: object
            properties:
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/MessageResult'
                    description: List of messages
                    example:
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
                        - command:
                            type: message
                          data:
                            avatar: https://example.com/avatar.png
                            chatroomId: chatroom456
                            createdAt: "2024-01-01T11:53:54Z"
                            data: Hello, world!
                            id: msg123
                            nickname: text
                            senderId: user789
                            type: text
                            updatedAt: "2024-01-01T11:53:54Z"
                          timestamp: 1719188007000000000
            description: List of messages
            example:
                messages:
                    - command:
                        type: message
                      data:
                        avatar: https://example.com/avatar.png
                        chatroomId: chatroom456
                        createdAt: "2024-01-01T11:53:54Z"
                        data: Hello, world!
                        id: msg123
                        nickname: text
                        senderId: user789
                        type: text
                        updatedAt: "2024-01-01T11:53:54Z"
                      timestamp: 1719188007000000000
                    - command:
                        type: message
                      data:
                        avatar: https://example.com/avatar.png
                        chatroomId: chatroom456
                        createdAt: "2024-01-01T11:53:54Z"
                        data: Hello, world!
                        id: msg123
                        nickname: text
                        senderId: user789
                        type: text
                        updatedAt: "2024-01-01T11:53:54Z"
                      timestamp: 1719188007000000000
                    - command:
                        type: message
                      data:
                        avatar: https://example.com/avatar.png
                        chatroomId: chatroom456
                        createdAt: "2024-01-01T11:53:54Z"
                        data: Hello, world!
                        id: msg123
                        nickname: text
                        senderId: user789
                        type: text
                        updatedAt: "2024-01-01T11:53:54Z"
                      timestamp: 1719188007000000000
                    - command:
                        type: message
                      data:
                        avatar: https://example.com/avatar.png
                        chatroomId: chatroom456
                        createdAt: "2024-01-01T11:53:54Z"
                        data: Hello, world!
                        id: msg123
                        nickname: text
                        senderId: user789
                        type: text
                        updatedAt: "2024-01-01T11:53:54Z"
                      timestamp: 1719188007000000000
            required:
                - messages
        RemoveUserFromChatroomRequestBody:
            type: object
            properties:
                userId:
                    type: string
                    description: User identifier
                    example: user789
            example:
                userId: user789
            required:
                - userId
        RemoveUserFromChatroomResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/RemoveUserResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: removeUserFromChatroom
                data:
                    chatroomId: "123456"
                    message: User removed successfully
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        RemoveUserResultData:
            type: object
            properties:
                chatroomId:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                message:
                    type: string
                    description: Message indicating the result of the operation
                    example: User removed successfully
            description: Result of removing a user from a chatroom
            example:
                chatroomId: "123456"
                message: User removed successfully
            required:
                - chatroomId
                - message
        ReorderBaseNavStateResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/BaseNavState'
                    description: 資料
                    example:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7a
                          index: 0
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7b
                          index: 1
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7c
                          index: 2
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: reorderBaseNavState
                data:
                    - base_id: EbZvovBKbFogJeRem5oj2S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7a
                      index: 0
                    - base_id: EbZvovBKbFogJeRem5oj3S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7b
                      index: 1
                    - base_id: EbZvovBKbFogJeRem5oj4S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7c
                      index: 2
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        ReorderBaseNavStatesRequestBody:
            type: object
            properties:
                id:
                    type: string
                    description: 識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                new_index:
                    type: integer
                    description: 新的順序
                    default: 1
                    example: 0
                    format: int64
                    minimum: 1
            example:
                id: 669071b8a650a662b82285ca
                new_index: 0
            required:
                - id
                - new_index
        ReorderBoardNavStatesRequestBody:
            type: object
            properties:
                parentID:
                    type: string
                    description: 上一級基地/資料夾的識別碼
                    example: 669071b8a650a662b82285ca
                    minLength: 24
                    maxLength: 24
                position:
                    type: integer
                    description: 新的順序
                    default: 0
                    example: 0
                    format: int64
            example:
                parentID: 669071b8a650a662b82285ca
                position: 0
            required:
                - parentID
                - position
        SendMessageRequestBody:
            type: object
            properties:
                data:
                    type: string
                    description: Content of the message
                    example: Hello, world!
                type:
                    type: string
                    description: Type of the message
                    example: text
            example:
                data: Hello, world!
                type: text
            required:
                - type
                - data
        SignInRequestBody:
            type: object
            properties:
                firebaseIdToken:
                    type: string
                    description: Firebase Id Token
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.Et9HFtf9R3GEMA0IICOfFMVXY7kkTX1wr4qCyhIf58U
                    minLength: 100
            example:
                firebaseIdToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.Et9HFtf9R3GEMA0IICOfFMVXY7kkTX1wr4qCyhIf58U
            required:
                - firebaseIdToken
        SyncPayloadData:
            type: object
            properties:
                base_infos:
                    type: array
                    items:
                        $ref: '#/components/schemas/BaseInfo'
                    example:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj2S
                          logo: http://example.com/logo.png
                          name: 基地 A
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj3S
                          logo: http://example.com/logo.png
                          name: 基地 B
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj4S
                          logo: http://example.com/logo.png
                          name: 基地 C
                base_nav_states:
                    type: array
                    items:
                        $ref: '#/components/schemas/BaseNavState'
                    example:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7a
                          index: 0
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7b
                          index: 1
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7c
                          index: 2
            example:
                base_infos:
                    - base_id: EbZvovBKbFogJeRem5oj2S
                      color: '#FF5733'
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj2S
                      logo: http://example.com/logo.png
                      name: 基地 A
                    - base_id: EbZvovBKbFogJeRem5oj3S
                      color: '#FF5733'
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj3S
                      logo: http://example.com/logo.png
                      name: 基地 B
                    - base_id: EbZvovBKbFogJeRem5oj4S
                      color: '#FF5733'
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj4S
                      logo: http://example.com/logo.png
                      name: 基地 C
                base_nav_states:
                    - base_id: EbZvovBKbFogJeRem5oj2S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7a
                      index: 0
                    - base_id: EbZvovBKbFogJeRem5oj3S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7b
                      index: 1
                    - base_id: EbZvovBKbFogJeRem5oj4S
                      deleted_at: null
                      id: EbZvovBKbFogJeRem5oj7c
                      index: 2
        SyncRequestBody:
            type: object
            properties:
                lastTimestamp:
                    type: integer
                    description: 上次同步的時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                lastTimestamp: 1719188007000000000
        SyncResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/SyncPayloadData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: sync
                data:
                    base_infos:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj2S
                          logo: http://example.com/logo.png
                          name: 基地 A
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj3S
                          logo: http://example.com/logo.png
                          name: 基地 B
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          color: '#FF5733'
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj4S
                          logo: http://example.com/logo.png
                          name: 基地 C
                    base_nav_states:
                        - base_id: EbZvovBKbFogJeRem5oj2S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7a
                          index: 0
                        - base_id: EbZvovBKbFogJeRem5oj3S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7b
                          index: 1
                        - base_id: EbZvovBKbFogJeRem5oj4S
                          deleted_at: null
                          id: EbZvovBKbFogJeRem5oj7c
                          index: 2
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        UpdateBaseInfoRequestBody:
            type: object
            properties:
                color:
                    type: string
                    description: 主題颜色
                    example: '#FF5733'
                    minLength: 1
                    maxLength: 16
                logo:
                    type: string
                    description: 標識圖片的 URL
                    example: http://example.com/logo.png
                    minLength: 1
                    maxLength: 1024
                name:
                    type: string
                    description: 名稱
                    example: 基地 A
                    minLength: 1
                    maxLength: 128
            example:
                color: '#FF5733'
                logo: http://example.com/logo.png
                name: 基地 A
            required:
                - color
                - name
        UpdateBaseInfoResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/BaseInfo'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: updateBaseInfo
                data:
                    base_id: EbZvovBKbFogJeRem5oj2S
                    color: '#FF5733'
                    deleted_at: null
                    id: EbZvovBKbFogJeRem5oj2S
                    logo: http://example.com/logo.png
                    name: 基地 A
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        UpdateBoardInfoRequestBody:
            type: object
            properties:
                color:
                    type: string
                    description: 版颜色
                    example: '#FF5733'
                    minLength: 1
                    maxLength: 16
                logo:
                    type: string
                    description: 版Logo的 URL
                    example: http://example.com/logo.png
                    minLength: 1
                    maxLength: 1024
                name:
                    type: string
                    description: 名稱
                    example: 版 A
                    minLength: 1
                    maxLength: 128
            example:
                color: '#FF5733'
                logo: http://example.com/logo.png
                name: 版 A
            required:
                - color
                - logo
                - name
        UpdateBoardInfoResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/BoardInfo'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: updateBoardInfo
                data:
                    color: '#FF5733'
                    id: 669071b8a650a662b82285ca
                    logo: http://example.com/logo.png
                    name: 版 A
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        UpdateChatroomRequestBody:
            type: object
            properties:
                avatar:
                    type: string
                    description: Chatroom avatar
                    example: https://example.com/avatar.png
                title:
                    type: string
                    description: Title of the chatroom
                    example: Chat Room 1
            example:
                avatar: https://example.com/avatar.png
                title: Chat Room 1
            required:
                - title
                - avatar
        UserMutedChatRoomRequestBody:
            type: object
            properties:
                mute:
                    type: boolean
                    description: Mute
                    example: true
            example:
                mute: true
            required:
                - mute
        UserMutedChatRoomResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/UserMutedChatroomResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: userMutedChatRoom
                data:
                    chatroomId: "123456"
                    mute: true
                    userId: user789
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        UserMutedChatroomResultData:
            type: object
            properties:
                chatroomId:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                mute:
                    type: boolean
                    description: Mute
                    example: true
                userId:
                    type: string
                    description: User identifier
                    example: user789
            description: Result of muting a user in a chatroom
            example:
                chatroomId: "123456"
                mute: true
                userId: user789
            required:
                - chatroomId
                - userId
                - mute
        UserPinnedChatRoomRequestBody:
            type: object
            properties:
                pin:
                    type: boolean
                    description: Pin
                    example: true
            example:
                pin: true
            required:
                - pin
        UserPinnedChatRoomResult:
            type: object
            properties:
                command:
                    $ref: '#/components/schemas/Command'
                data:
                    $ref: '#/components/schemas/UserPinnedChatroomResultData'
                timestamp:
                    type: integer
                    description: 時間戳記
                    example: 1719188007000000000
                    format: int64
                    minimum: 1.719188007e+18
            example:
                command:
                    type: userPinnedChatRoom
                data:
                    chatroomId: "123456"
                    pin: true
                    userId: user789
                timestamp: 1719188007000000000
            required:
                - command
                - timestamp
                - data
        UserPinnedChatroomResultData:
            type: object
            properties:
                chatroomId:
                    type: string
                    description: Chatroom identifier
                    example: "123456"
                pin:
                    type: boolean
                    description: Pin status
                    example: true
                userId:
                    type: string
                    description: User identifier
                    example: user789
            description: Result of pinning a user in a chatroom
            example:
                chatroomId: "123456"
                pin: true
                userId: user789
            required:
                - chatroomId
                - userId
                - pin
    securitySchemes:
        JWT_header_Authorization:
            type: http
            scheme: bearer
tags:
    - name: Authentication
      description: 認證
    - name: Base
      description: 基地
    - name: Board
      description: 版
    - name: chatroom
      description: The chatroom service provides operations for managing chatrooms.
    - name: folder
      description: The folder service provides operations for managing folders.
    - name: Sync
      description: 資料同步
security:
    - JWT_header_: []
